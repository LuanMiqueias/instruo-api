// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                 String               @id @default(uuid())
  email              String               @unique
  passwordHash       String
  name               String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  courses            StudentOnCourse[]
  StudentOnScheduled StudentOnScheduled[]
}

model Instructor {
  id           String               @id @default(uuid())
  email        String               @unique
  passwordHash String
  bio          String?
  name         String
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  role         InstructorRole
  courses      InstructorOnCourse[]
  schedules    Schedule[]
}

model Course {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  slug        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  instructors InstructorOnCourse[]
  students    StudentOnCourse[]
  schedules   Schedule[]
}

model InstructorOnCourse {
  instructor   Instructor @relation(fields: [instructorId], references: [id])
  instructorId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@id([instructorId, courseId])
}

model StudentOnCourse {
  student   Student @relation(fields: [studentId], references: [id])
  studentId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@id([studentId, courseId])
}

model StudentOnScheduled {
  student   Student @relation(fields: [studentId], references: [id])
  studentId String

  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId String

  @@id([studentId, scheduleId])
}

model Schedule {
  id          String   @id @default(uuid())
  scheduledAt DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  classLink   String

  instructor   Instructor @relation(fields: [instructorId], references: [id])
  instructorId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  students StudentOnScheduled[]
}

enum InstructorRole {
  TEACHER
  ADMIN
}
